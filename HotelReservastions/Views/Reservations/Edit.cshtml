@model HotelReservastionsManager.Models.Reservation
@{
    ViewData["Title"] = "Edit Reservation";
    var clients = ViewData["Clients"] as List<HotelReservastionsManager.Models.Client>;
}

<h1>Edit Reservation</h1>
<hr />
<div class="row">
    <div class="col-md-8">
        <form asp-action="Edit" id="reservationForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ReservationId" />

            <div class="form-group mb-3">
                <label asp-for="RoomNumber" class="control-label"></label>
                <select asp-for="RoomNumber" class="form-control" asp-items="ViewBag.RoomNumber"></select>
                <span asp-validation-for="RoomNumber" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="UserId" class="control-label">Employee</label>
                <select asp-for="UserId" class="form-control" asp-items="ViewBag.UserId"></select>
                <span asp-validation-for="UserId" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="CheckInDate" class="control-label"></label>
                <input asp-for="CheckInDate" class="form-control" type="date" />
                <span asp-validation-for="CheckInDate" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="CheckOutDate" class="control-label"></label>
                <input asp-for="CheckOutDate" class="form-control" type="date" />
                <span asp-validation-for="CheckOutDate" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <h5>Meal Options</h5>
                <div class="form-check">
                    <input class="form-check-input meal-option" type="checkbox" asp-for="BreakfastIncluded" id="breakfastIncluded" />
                    <label class="form-check-label" for="breakfastIncluded">
                        @Html.DisplayNameFor(model => model.BreakfastIncluded)
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input meal-option" type="checkbox" asp-for="AllInclusive" id="allInclusive" />
                    <label class="form-check-label" for="allInclusive">
                        @Html.DisplayNameFor(model => model.AllInclusive)
                    </label>
                </div>
                <div id="mealOptionError" class="text-danger" style="display: none;">
                    Cannot select both Breakfast Included and All Inclusive options simultaneously.
                </div>
            </div>

            <div class="form-group mb-3">
                <label asp-for="FinalPrice" class="control-label"></label>
                <input asp-for="FinalPrice" class="form-control" />
                <span asp-validation-for="FinalPrice" class="text-danger"></span>
            </div>

            <h4>Clients staying in the room</h4>
            <div id="clientsContainer">
                @if (clients != null && clients.Any())
                {
                    for (int i = 0; i < clients.Count; i++)
                    {
                        var client = clients[i];
                        <div class="client-row mb-3 p-3 border rounded">
                            <div class="d-flex justify-content-between">
                                <h5>Client @(i + 1)</h5>
                                @if (i > 0)
                                {
                                    <button type="button" class="btn btn-sm btn-danger remove-client">Remove</button>
                                }
                            </div>
                            <input type="hidden" name="ClientId[@i]" value="@client.ClientId" />
                            <div class="row">
                                <div class="col-md-6 mb-2">
                                    <label class="control-label">First Name</label>
                                    <input name="ClientFirstName[@i]" class="form-control" value="@client.FirstName" required />
                                </div>
                                <div class="col-md-6 mb-2">
                                    <label class="control-label">Last Name</label>
                                    <input name="ClientLastName[@i]" class="form-control" value="@client.LastName" required />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 mb-2">
                                    <label class="control-label">Phone Number</label>
                                    <input name="ClientPhone[@i]" class="form-control" value="@client.PhoneNumber" required maxlength="10" minlength="10" />
                                </div>
                                <div class="col-md-6 mb-2">
                                    <label class="control-label">Email</label>
                                    <input name="ClientEmail[@i]" class="form-control" value="@client.Email" required type="email" />
                                </div>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="ClientAdult[@i]" value="true" id="adult@i" @(client.Adult ? "checked" : "") />
                                <label class="form-check-label" for="adult@i">
                                    Adult
                                </label>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="client-row mb-3 p-3 border rounded">
                        <h5>Client 1</h5>
                        <div class="row">
                            <div class="col-md-6 mb-2">
                                <label class="control-label">First Name</label>
                                <input name="ClientFirstName[0]" class="form-control" required />
                            </div>
                            <div class="col-md-6 mb-2">
                                <label class="control-label">Last Name</label>
                                <input name="ClientLastName[0]" class="form-control" required />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-2">
                                <label class="control-label">Phone Number</label>
                                <input name="ClientPhone[0]" class="form-control" required maxlength="10" minlength="10" />
                            </div>
                            <div class="col-md-6 mb-2">
                                <label class="control-label">Email</label>
                                <input name="ClientEmail[0]" class="form-control" required type="email" />
                            </div>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" name="ClientAdult[0]" value="true" id="adult0" checked>
                            <label class="form-check-label" for="adult0">
                                Adult
                            </label>
                        </div>
                    </div>
                }
            </div>

            <button type="button" id="addClientBtn" class="btn btn-secondary mb-3">Add Another Client</button>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const clientsContainer = document.getElementById('clientsContainer');
            const addClientBtn = document.getElementById('addClientBtn');
            let clientCount = document.querySelectorAll('.client-row').length;

            document.querySelectorAll('.remove-client').forEach(button => {
                button.addEventListener('click', function() {
                    this.closest('.client-row').remove();
                });
            });

            addClientBtn.addEventListener('click', function() {
                clientCount++;
                const newIndex = clientCount - 1;

                const clientRow = document.createElement('div');
                clientRow.className = 'client-row mb-3 p-3 border rounded';
                clientRow.innerHTML = `
                    <div class="d-flex justify-content-between">
                        <h5>Client ${clientCount}</h5>
                        <button type="button" class="btn btn-sm btn-danger remove-client">Remove</button>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-2">
                            <label class="control-label">First Name</label>
                            <input name="ClientFirstName[${newIndex}]" class="form-control" required />
                        </div>
                        <div class="col-md-6 mb-2">
                            <label class="control-label">Last Name</label>
                            <input name="ClientLastName[${newIndex}]" class="form-control" required />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-2">
                            <label class="control-label">Phone Number</label>
                            <input name="ClientPhone[${newIndex}]" class="form-control" required maxlength="10" minlength="10" />
                        </div>
                        <div class="col-md-6 mb-2">
                            <label class="control-label">Email</label>
                            <input name="ClientEmail[${newIndex}]" class="form-control" required type="email" />
                        </div>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" name="ClientAdult[${newIndex}]" value="true" id="adult${newIndex}" checked>
                        <label class="form-check-label" for="adult${newIndex}">
                            Adult
                        </label>
                    </div>
                `;

                clientsContainer.appendChild(clientRow);

                const removeBtn = clientRow.querySelector('.remove-client');
                removeBtn.addEventListener('click', function() {
                    clientRow.remove();
                });
            });

            const breakfastCheckbox = document.getElementById('breakfastIncluded');
            const allInclusiveCheckbox = document.getElementById('allInclusive');
            const mealOptionError = document.getElementById('mealOptionError');
            const form = document.getElementById('reservationForm');

            validateMealOptions();

            breakfastCheckbox.addEventListener('change', validateMealOptions);
            allInclusiveCheckbox.addEventListener('change', validateMealOptions);

            form.addEventListener('submit', function(event) {
                if (breakfastCheckbox.checked && allInclusiveCheckbox.checked) {
                    event.preventDefault();
                    mealOptionError.style.display = 'block';
                    window.scrollTo({
                        top: mealOptionError.offsetTop - 100,
                        behavior: 'smooth'
                    });
                }
            });

            function validateMealOptions() {
                if (breakfastCheckbox.checked && allInclusiveCheckbox.checked) {
                    mealOptionError.style.display = 'block';
                } else {
                    mealOptionError.style.display = 'none';
                }
            }
        });
    </script>
}